import{_ as e,c as d,o as n,ah as l}from"./chunks/framework.B3ht97ba.js";const x=JSON.parse('{"title":"API","description":"","frontmatter":{},"headers":[],"relativePath":"zh/guide/api.md","filePath":"zh/guide/api.md"}'),r={name:"zh/guide/api.md"};function a(i,t,c,s,o,g){return n(),d("div",null,t[0]||(t[0]=[l('<h1 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h1><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:center;">Name</th><th style="text-align:center;">Description</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th></tr></thead><tbody><tr><td style="text-align:center;">getRowId</td><td style="text-align:center;">返回行id</td><td style="text-align:center;"><code>() =&gt; string</code></td><td style="text-align:center;">—</td></tr><tr><td style="text-align:center;">rows</td><td style="text-align:center;">行数据</td><td style="text-align:center;"><code>RowData[]</code></td><td style="text-align:center;">—</td></tr><tr><td style="text-align:center;">columns</td><td style="text-align:center;">表格部分的列数据, 可查阅<a href="https://www.ag-grid.com/archive/30.0.6/vue-data-grid/" target="_blank" rel="noreferrer">ag-grid</a> v30.0.6</td><td style="text-align:center;"><code>ColDef[]</code></td><td style="text-align:center;">—</td></tr><tr><td style="text-align:center;">defaultCol</td><td style="text-align:center;">默认列数据</td><td style="text-align:center;"><code>DefaultColDef</code></td><td style="text-align:center;">—</td></tr><tr><td style="text-align:center;">rowHeight</td><td style="text-align:center;">每行的高度</td><td style="text-align:center;"><code>number</code></td><td style="text-align:center;">25</td></tr><tr><td style="text-align:center;">headerHeight</td><td style="text-align:center;">甘特图头部高度</td><td style="text-align:center;"><code>number</code></td><td style="text-align:center;">25</td></tr><tr><td style="text-align:center;">rowBuffer</td><td style="text-align:center;">渲染区域之外的行缓存数</td><td style="text-align:center;"><code>number</code></td><td style="text-align:center;">5</td></tr><tr><td style="text-align:center;">rowSelection</td><td style="text-align:center;">行选择</td><td style="text-align:center;"><code>single / multiple / none</code></td><td style="text-align:center;">multiple</td></tr><tr><td style="text-align:center;">defaultTableViewWidth</td><td style="text-align:center;">表格默认宽度</td><td style="text-align:center;"><code>number</code></td><td style="text-align:center;">350</td></tr><tr><td style="text-align:center;">maxTableViewWidth</td><td style="text-align:center;">表格最大宽度</td><td style="text-align:center;"><code>number</code></td><td style="text-align:center;">1000</td></tr><tr><td style="text-align:center;">defaultPerHourSpacing</td><td style="text-align:center;">每小时的显示间距</td><td style="text-align:center;"><code>number</code></td><td style="text-align:center;">0.1</td></tr><tr><td style="text-align:center;">defaultTimeScale</td><td style="text-align:center;">默认的时间轴单位</td><td style="text-align:center;"><code>day / week / month / quarter/ year</code></td><td style="text-align:center;">—</td></tr><tr><td style="text-align:center;">styleOption</td><td style="text-align:center;">甘特图全局样式</td><td style="text-align:center;"><code>GanttStyleOption</code></td><td style="text-align:center;">—</td></tr><tr><td style="text-align:center;">defaultShowFirstLevel</td><td style="text-align:center;">默认是否显示第一级头部</td><td style="text-align:center;"><code>boolean</code></td><td style="text-align:center;">true</td></tr><tr><td style="text-align:center;">locale</td><td style="text-align:center;">国际化</td><td style="text-align:center;"><code>en / zh-cn</code></td><td style="text-align:center;">browser&#39;s language</td></tr><tr><td style="text-align:center;">timePointComp</td><td style="text-align:center;">时间点组件</td><td style="text-align:center;"><code>Comp</code></td><td style="text-align:center;">—</td></tr><tr><td style="text-align:center;">getEmptyRows</td><td style="text-align:center;">返回空白行</td><td style="text-align:center;"><code>(count: number) =&gt; RowData[]</code></td><td style="text-align:center;">—</td></tr><tr><td style="text-align:center;">timeLineRender</td><td style="text-align:center;">自定义时间线组件</td><td style="text-align:center;"><code>Comp</code></td><td style="text-align:center;">—</td></tr><tr><td style="text-align:center;">timeLineRenderParams</td><td style="text-align:center;">自定义时间线组件参数</td><td style="text-align:center;"><code>Record&lt;string, any&gt;</code></td><td style="text-align:center;">—</td></tr></tbody></table><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:center;">Name</th><th style="text-align:center;">Description</th><th style="text-align:center;">Type</th></tr></thead><tbody><tr><td style="text-align:center;">select-change</td><td style="text-align:center;">当用户点击行时触发</td><td style="text-align:center;"><code>(selectedIds: string[]) =&gt; void</code></td></tr><tr><td style="text-align:center;">expand-change</td><td style="text-align:center;">当行的展开状态变化时触发</td><td style="text-align:center;"><code>(unExpandRowIds: string[]) =&gt; void</code></td></tr><tr><td style="text-align:center;">row-context-menu</td><td style="text-align:center;">当用户右键点击行时触发</td><td style="text-align:center;"><code>(e: MouseEvent, rowId?: string | null) =&gt; void</code></td></tr><tr><td style="text-align:center;">cell-double-clicked</td><td style="text-align:center;">当用户双击行时触发</td><td style="text-align:center;"><code>(rowData: RowData | undefined, columnData?: ColDef) =&gt; void</code></td></tr><tr><td style="text-align:center;">gantt-mouse-down</td><td style="text-align:center;">当用户按下鼠标时触发</td><td style="text-align:center;"><code>(e: MouseEvent, rowId?: string | null) =&gt; void</code></td></tr><tr><td style="text-align:center;">time-point-move-finished</td><td style="text-align:center;">当时间点移动后触发</td><td style="text-align:center;"><code>(timePoint: TimePoint, date: dayjs.Dayjs) =&gt; void</code></td></tr><tr><td style="text-align:center;">per-hour-spacing-change</td><td style="text-align:center;">当时间轴变化时触发</td><td style="text-align:center;"><code>(perHourSpacing: number) =&gt; void</code></td></tr><tr><td style="text-align:center;">time-point-context-menu</td><td style="text-align:center;">当用户右键点击时间点时触发</td><td style="text-align:center;"><code>(e: MouseEvent, timePoints: TimePoint[], rowData?: RowData) =&gt; void</code></td></tr><tr><td style="text-align:center;">time-line-stretch-change</td><td style="text-align:center;">当时间线被拉伸时触发</td><td style="text-align:center;"><code>(rowId: string, timeLineIds: string[], startDate: dayjs.Dayjs | null, endDate: dayjs.Dayjs | null) =&gt; void</code></td></tr><tr><td style="text-align:center;">time-line-move-change</td><td style="text-align:center;">当时间线被移动时触发</td><td style="text-align:center;"><code>(rowId: string, timeLineIds: string[], movedTimeData: MovedTimeLineData[]) =&gt; void</code></td></tr><tr><td style="text-align:center;">view-port-changed</td><td style="text-align:center;">当渲染区域的行发生变化时触发</td><td style="text-align:center;"><code>(data: RowData[]) =&gt; void | Promise&lt;void&gt;</code></td></tr></tbody></table><h2 id="exposes" tabindex="-1">Exposes <a class="header-anchor" href="#exposes" aria-label="Permalink to &quot;Exposes&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:center;">Method</th><th style="text-align:center;">Description</th><th style="text-align:center;">Type</th></tr></thead><tbody><tr><td style="text-align:center;">getRowNode</td><td style="text-align:center;">根据行id获取行节点</td><td style="text-align:center;"><code>(id: string) =&gt; GanttRowNode&lt;RowData&gt; | undefined</code></td></tr><tr><td style="text-align:center;">getRowNodeChildren</td><td style="text-align:center;">获取行的子节点</td><td style="text-align:center;"><code>(parentId?: string) =&gt; GanttRowNode&lt;RowData&gt;[]</code></td></tr><tr><td style="text-align:center;">getRowDataList</td><td style="text-align:center;">以平摊数组的形式返回行原始数据</td><td style="text-align:center;"><code>() =&gt; RowData[]</code></td></tr><tr><td style="text-align:center;">freshRowNodes</td><td style="text-align:center;">当行数据更新时刷新显示</td><td style="text-align:center;"><code>(rows: RowData[]) =&gt; void</code></td></tr><tr><td style="text-align:center;">refreshCells</td><td style="text-align:center;">刷新单元格显示</td><td style="text-align:center;"><code> (ids: string[], force?: boolean) =&gt; void</code></td></tr><tr><td style="text-align:center;">getDisplayRows</td><td style="text-align:center;">获取渲染区域的行数据</td><td style="text-align:center;"><code>() =&gt; RowData[] | null</code></td></tr><tr><td style="text-align:center;">expandAll</td><td style="text-align:center;">展开所有行</td><td style="text-align:center;"><code>() =&gt; void</code></td></tr><tr><td style="text-align:center;">freshTimeLines</td><td style="text-align:center;">刷新时间线显示(当时间点变化时)</td><td style="text-align:center;"><code>(rowIds: string[]) =&gt; void</code></td></tr><tr><td style="text-align:center;">selectRows</td><td style="text-align:center;">根据id选择指定行</td><td style="text-align:center;"><code>(ids: string[]) =&gt; void</code></td></tr></tbody></table>',7)]))}const h=e(r,[["render",a]]);export{x as __pageData,h as default};
